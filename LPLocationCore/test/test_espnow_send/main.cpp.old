#include <Arduino.h>

#include <WiFi.h>
#include <esp_now.h>

uint8_t receiver_mac[] = {0xF0, 0xF5, 0xBD, 0x76, 0xF6, 0xA4};
esp_now_peer_info_t peerInfo;

// callback when data is sent

void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status)
{
    Serial.println();
    Serial.print("Last Packet Send Status: ");
    Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Delivery Success" : "Delivery Fail");
}

void readMacAddress()
{
    Serial.print("MAC Address: ");
    Serial.println(WiFi.macAddress());
}

void setup()
{
    Serial.begin(115200);
    delay(2000);
    Serial.println("ESPNow sender Demo");

    readMacAddress();

    // Set device as a Wi-Fi Station
    WiFi.mode(WIFI_STA);
    // WiFi.disconnect();

    // Init ESP-NOW
    if (esp_now_init() != ESP_OK)
    {
        Serial.println("Error initializing ESP-NOW");
        return;
    }

    // Once ESPNow is successfully Init, we will register for Send CB to
    // get the status of Transmitted packet
    esp_now_register_send_cb(OnDataSent);

    // Register peer
    memcpy(peerInfo.peer_addr, receiver_mac, 6);
    peerInfo.channel = 0;
    peerInfo.encrypt = false;

    // Add peer
    if (esp_now_add_peer(&peerInfo) != ESP_OK) {
        Serial.println("Failed to add peer");
        return;
    }
}

void loop()
{
    // static uint8_t a = 0;
    // delay(100);
    // ESPNow.send_message(receiver_mac, &a, 1);
    // Serial.println(a++);

    esp_err_t result = esp_now_send(receiver_mac, (uint8_t *)"Hello", 5);
    delay(1);
    if (result == ESP_OK) {
        Serial.println("Sent with success");
    }
    else
    {
        Serial.println("Error sending the data");
    }
    
    delay(1000);
}